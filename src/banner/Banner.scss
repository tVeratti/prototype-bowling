@import '../shared/transitions';
@import '../shared/colors';

$size-pin: 45vh;
$size-ball: 35vh;

.banner__pins {
  position: fixed;
  top: 10vh;
  left: 50%;
}

.pin {
  width: $size-pin / 2;
  height: $size-pin;
}

.banner__row {
  display: flex;
  position: absolute;

  // Place pins in 4 rows, offsetting
  // each a tiny bit higher.
  /**
    * - - - -   :nth-child(0) 0%
    *  - - -    :nth-child(1) 10%
    *   - -     :nth-child(2) 20%
    *    -      :nth-child(3) 30%
    */
  @for $i from 1 through (4) {
    $pin-color-bw: mix(white, mix($primary, $base, 60%), ($i + 1) * 20);

    // Vertical offset
    &:nth-child(#{$i}) {
      transform: translateX(-50%) translateY($i * 5rem);

      // Horizontal offset
      svg {
        @for $j from 1 through (4) {
          &:nth-child(#{$j}) {
            left: $j * 10rem;
            fill: $pin-color-bw;
          }
        }
      }
    }
  }

  // Explodey rotations
  // prettier-ignore
  @mixin explode($row, $col, $x: 0, $scale: 1) {
    @keyframes explode-#{$row}-#{$col} {
      0% {
        transform:
          translateX(0)
          rotate(0)
          scale($scale);
      }

      100% {
        transform:
          translateX(100% * $x)
          translateY(-10% * $row)
          rotate(20deg * $x * $row)
          scale($scale);
      }
    }

    &:nth-child(#{$row}) svg:nth-child(#{$col}) {
      animation: explode-#{$row}-#{$col} 8s infinite paused alternate;
    }
  }

  // Row (1 pin)
  @include explode(4, 1, -1, 1.3);
  // Row (2 pins)
  @include explode(3, 1, -1, 1.2);
  @include explode(3, 2, 1, 1.2);
  // Row (3 pins)
  @include explode(2, 1, -1, 1);
  @include explode(2, 2, 1, 1);
  @include explode(2, 3, 1, 1);
  // Row (4 pins)
  @include explode(1, 1, -1, 0.8);
  @include explode(1, 2, -1, 0.8);
  @include explode(1, 3, 01, 0.8);
  @include explode(1, 4, 01, 0.8);
}
